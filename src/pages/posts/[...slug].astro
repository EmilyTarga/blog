---
import { getCollection } from "astro:content";
import MarkdownPostsLayout from "../../layouts/MarkdownPostsLayout.astro";

export const prerender = true;

export async function getStaticPaths() {

  const postEntries = await getCollection("posts");

  const posts = postEntries.map((entry) => {
      const [...slug] = entry.slug.split('/');

    return {   
        params: { slug: slug.join('/') || undefined },
        props: { entry },
      }
    });

    return posts
}

const { slug } = Astro.params;
const { entry } = Astro.props;
const { Content } = await entry.render();

---

<MarkdownPostsLayout frontmatter={entry.data}>
    <Content />
    <div id="utterances-container"></div>
    <script is:inline >

      function loadUtterances() {
            const container = document.getElementById('utterances-container');

            const theme = localStorage.theme === "light" ? '' : 'photon-dark';
            const script = document.createElement('script');
            script.src = 'https://utteranc.es/client.js';
            script.setAttribute('repo', 'EmilyTarga/blog');
            script.setAttribute('issue-term', 'title');
            script.setAttribute('theme', theme);
            script.setAttribute('crossorigin', 'anonymous');
            script.async = true;

            container.appendChild(script);
          }

      loadUtterances();

      document.getElementById("themeToggle").addEventListener("click", () => {

          const existingFrame = document.querySelector('.utterances');
          existingFrame.remove();

          loadUtterances();
      });

    </script>
</MarkdownPostsLayout>
