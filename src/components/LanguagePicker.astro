---
import { languages } from '../i18n/ui';

import { getLangFromUrl } from '../i18n/utils';
const lang = getLangFromUrl(Astro.url).toUpperCase();

---

 <div class="dropdown">
  <button onclick="myFunction()" class="dropbtn">{lang == 'PTBR' ? `ðŸ‡§ðŸ‡· ${lang}` : `ðŸ‡ºðŸ‡¸ ${lang}`}</button>
  <div id="myDropdown" class="dropdown-content">
  {Object.entries(languages).map(([lang, label]) => (
    <a href={`/blog/${lang}/`}>{label} </a>
  ))}
  </div>
</div> 

<script is:inline>
function myFunction() {
  document.getElementById("myDropdown").classList.toggle("show");
}

window.onclick = function(event) {
  if (!event.target.matches('.dropbtn')) {
    var dropdowns = document.getElementsByClassName("dropdown-content");
    var i;
    for (i = 0; i < dropdowns.length; i++) {
      var openDropdown = dropdowns[i];
      if (openDropdown.classList.contains('show')) {
        openDropdown.classList.remove('show');
      }
    }
  }
} 
</script>

<style>
 /* Dropdown Button */
.dropbtn {
  background-color: transparent;
  color: white;
  padding: 16px;
  font-size: 16px;
  border: none;
  cursor: pointer;
}

/* The container <div> - needed to position the dropdown content */
.dropdown {
  position: relative;
  display: inline-block;
}

/* Dropdown Content (Hidden by Default) */
.dropdown-content {
  display: none;
  position: absolute;
  background-color: #fdebf3;
  min-width: 120px;
  box-shadow: 0px 8px 12px 0px rgba(0,0,0,0.2);
  z-index: 1;
}

/* Links inside the dropdown */
.dropdown-content a {
  color: black;
  padding: 12px 12px;
  text-decoration: none;
  display: block;
}

/* Change color of dropdown links on hover */
.dropdown-content a:hover {background-color: #ddd;}

/* Show the dropdown menu (use JS to add this class to the .dropdown-content container when the user clicks on the dropdown button) */
.show {display:block;} 
</style>
